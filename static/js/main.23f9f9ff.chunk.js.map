{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","setSelectedDate","setInputTime","inputTime","selectedDate","setReminderDate","reminderDate","today","Date","getHours","getMinutes","value","onChange","e","target","type","className","onClick","preventDefault","toLocaleString","text","completed","id","Math","random","dueDate","name","label","minDate","date","placeholder","maxDate","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","document","title","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","getItem","setItem","JSON","stringify","todolocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23f9f9ff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { DateTimePicker } from \"react-rainbow-components\";\r\n\r\nconst Form = ({\r\n  setInputText,\r\n  todos,\r\n  setTodos,\r\n  inputText,\r\n  setStatus,\r\n  setInputTime,\r\n  inputTime,\r\n  setSelectedDate,\r\n  selectedDate,\r\n  setReminderDate,\r\n  reminderDate,\r\n}) => {\r\n  var reminderTime;\r\n  var time;\r\n  var dueDates;\r\n  const dateChangeHandler = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const dateReminderHandler = (date) => {\r\n    setReminderDate(date);\r\n  };\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const sumbitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    selectedDate = selectedDate.toLocaleString(\"en-CA\");\r\n    reminderDate = reminderDate.toLocaleString(\"en-CA\");\r\n\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        text: inputText,\r\n        completed: false,\r\n        id: Math.random() * 1000,\r\n        dueDate: selectedDate,\r\n        reminderDate: reminderDate,\r\n      },\r\n    ]);\r\n    setInputText(\"\");\r\n    setSelectedDate(new Date());\r\n  };\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const reminderTimeHandler = (e) => {\r\n    reminderTime = e.target.value;\r\n  };\r\n\r\n  var today = new Date();\r\n  var time = today.getHours() + 1 + \":\" + today.getMinutes();\r\n  return (\r\n    <form>\r\n      <table>\r\n        <tr>\r\n          <table>\r\n            <tr>\r\n              <td>Task:</td>\r\n              <td>\r\n                <input\r\n                  value={inputText}\r\n                  onChange={inputTextHandler}\r\n                  type=\"text\"\r\n                  className=\"todo-input\"\r\n                />\r\n\r\n                <button\r\n                  onClick={sumbitTodoHandler}\r\n                  className=\"todo-button\"\r\n                  type=\"submit\"\r\n                >\r\n                  <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <div className=\"select\">\r\n                  <select\r\n                    onChange={statusHandler}\r\n                    name=\"todos\"\r\n                    className=\"filter-todo\"\r\n                  >\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                  </select>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </tr>\r\n        <tr>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <DateTimePicker\r\n                  label=\"complete By\"\r\n                  minDate={new Date()}\r\n                  value={selectedDate}\r\n                  className=\"todo-input\"\r\n                  onChange={dateChangeHandler}\r\n                  placeholder=\"enter due date\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <DateTimePicker\r\n                  label=\"Set Reminder\"\r\n                  minDate={new Date()}\r\n                  maxDate={selectedDate}\r\n                  value={reminderDate}\r\n                  className=\"todo-input\"\r\n                  onChange={dateReminderHandler}\r\n                  placeholder=\"enter reminder date\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </tr>\r\n      </table>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos, dueDate, reminderDate }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item  ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <li className={`todo-item  ${todo.completed ? \"completed\" : \"\"}`}>\r\n        Due: {dueDate}\r\n      </li>\r\n      <li className={`todo-item  ${todo.completed ? \"completed\" : \"\"}`}>\r\n        Reminder: {reminderDate}\r\n      </li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            todo={todo}\r\n            key={todo.id}\r\n            text={todo.text}\r\n            dueDate={todo.dueDate}\r\n            reminderDate={todo.reminderDate}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\n\n//Importing Components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  document.title = \"Todo List\";\n  //States\n  const [inputTime, setInputTime] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [selectedDate, setSelectedDate] = useState();\n  const [reminderDate, setReminderDate] = useState();\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //UseEffect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  //Functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //save to local\n  const saveLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todolocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todolocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form\n        reminderDate={reminderDate}\n        selectedDate={selectedDate}\n        inputTime={inputTime}\n        inputText={inputText}\n        todos={todos}\n        setReminderDate={setReminderDate}\n        setSelectedDate={setSelectedDate}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setInputTime={setInputTime}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}